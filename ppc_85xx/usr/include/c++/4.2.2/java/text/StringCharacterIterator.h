// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_text_StringCharacterIterator__
#define __java_text_StringCharacterIterator__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace java
  {
    namespace text
    {
      class StringCharacterIterator;
    }
  }
}

class java::text::StringCharacterIterator : public ::java::lang::Object
{
public:
  StringCharacterIterator (::java::lang::String *);
  StringCharacterIterator (::java::lang::String *, jint);
  StringCharacterIterator (::java::lang::String *, jint, jint, jint);
public: // actually package-private
  StringCharacterIterator (::java::text::StringCharacterIterator *, jint, jint);
public:
  virtual jchar current ();
  virtual jchar next ();
  virtual jchar previous ();
  virtual jchar first ();
  virtual jchar last ();
  virtual jint getIndex () { return index; }
  virtual jchar setIndex (jint);
  virtual jint getBeginIndex () { return begin; }
  virtual jint getEndIndex () { return end; }
  virtual ::java::lang::Object *clone ();
  virtual jboolean equals (::java::lang::Object *);
  virtual jint hashCode ();
  virtual void setText (::java::lang::String *);
private:
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object )))) text;
  jint begin;
  jint end;
  jint index;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_text_StringCharacterIterator__ */
