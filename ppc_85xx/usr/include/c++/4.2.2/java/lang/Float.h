// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_lang_Float__
#define __java_lang_Float__

#pragma interface

#include <java/lang/Number.h>

class java::lang::Float : public ::java::lang::Number
{
public:
  Float (jfloat);
  Float (jdouble);
  Float (::java::lang::String *);
  static ::java::lang::String *toString (jfloat);
  static ::java::lang::String *toHexString (jfloat);
  static ::java::lang::Float *valueOf (::java::lang::String *);
  static ::java::lang::Float *valueOf (jfloat);
  static jfloat parseFloat (::java::lang::String *);
  static jboolean isNaN (jfloat);
  static jboolean isInfinite (jfloat);
  virtual jboolean isNaN ();
  virtual jboolean isInfinite ();
  virtual ::java::lang::String *toString ();
  virtual jbyte byteValue ();
  virtual jshort shortValue ();
  virtual jint intValue ();
  virtual jlong longValue ();
  virtual jfloat floatValue () { return value; }
  virtual jdouble doubleValue ();
  virtual jint hashCode ();
  virtual jboolean equals (::java::lang::Object *);
  static jint floatToIntBits (jfloat);
  static jint floatToRawIntBits (jfloat);
  static jfloat intBitsToFloat (jint);
  virtual jint compareTo (::java::lang::Float *);
  virtual jint compareTo (::java::lang::Object *);
  static jint compare (jfloat, jfloat);
private:
  static const jlong serialVersionUID = -2671257302660747028LL;
public:
  static const jfloat MAX_VALUE;
  static const jfloat MIN_VALUE;
  static const jfloat NEGATIVE_INFINITY;
  static const jfloat POSITIVE_INFINITY;
  static const jfloat NaN;
  static ::java::lang::Class *TYPE;
  static const jint SIZE = 32L;
private:
  jfloat __attribute__((aligned(__alignof__( ::java::lang::Number ))))  value;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_lang_Float__ */
