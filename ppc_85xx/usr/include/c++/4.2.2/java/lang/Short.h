// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_lang_Short__
#define __java_lang_Short__

#pragma interface

#include <java/lang/Number.h>
#include <gcj/array.h>

class java::lang::Short : public ::java::lang::Number
{
public:
  Short (jshort);
  Short (::java::lang::String *);
  static ::java::lang::String *toString (jshort);
  static jshort parseShort (::java::lang::String *);
  static jshort parseShort (::java::lang::String *, jint);
  static ::java::lang::Short *valueOf (::java::lang::String *, jint);
  static ::java::lang::Short *valueOf (::java::lang::String *);
  static ::java::lang::Short *valueOf (jshort);
  static ::java::lang::Short *decode (::java::lang::String *);
  virtual jbyte byteValue ();
  virtual jshort shortValue () { return value; }
  virtual jint intValue () { return value; }
  virtual jlong longValue ();
  virtual jfloat floatValue ();
  virtual jdouble doubleValue ();
  virtual ::java::lang::String *toString ();
  virtual jint hashCode () { return value; }
  virtual jboolean equals (::java::lang::Object *);
  virtual jint compareTo (::java::lang::Short *);
  virtual jint compareTo (::java::lang::Object *);
  static jshort reverseBytes (jshort);
private:
  static const jlong serialVersionUID = 7515723908773894738LL;
public:
  static const jint MIN_VALUE = -32768L;
  static const jint MAX_VALUE = 32767L;
  static ::java::lang::Class *TYPE;
  static const jint SIZE = 16L;
private:
  static const jint MIN_CACHE = -128L;
  static const jint MAX_CACHE = 127L;
  static JArray< ::java::lang::Short *> *shortCache;
  jshort __attribute__((aligned(__alignof__( ::java::lang::Number ))))  value;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_lang_Short__ */
