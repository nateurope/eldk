// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_security_auth_kerberos_ServicePermission__
#define __javax_security_auth_kerberos_ServicePermission__

#pragma interface

#include <java/security/Permission.h>

extern "Java"
{
  namespace javax
  {
    namespace security
    {
      namespace auth
      {
        namespace kerberos
        {
          class ServicePermission;
        }
      }
    }
  }
  namespace java
  {
    namespace security
    {
      class PermissionCollection;
      class Permission;
    }
  }
}

class javax::security::auth::kerberos::ServicePermission : public ::java::security::Permission
{
public:
  ServicePermission (::java::lang::String *, ::java::lang::String *);
  virtual jboolean implies (::java::security::Permission *);
  virtual jboolean equals (::java::lang::Object *);
  virtual jint hashCode ();
  virtual ::java::lang::String *getActions ();
  virtual ::java::security::PermissionCollection *newPermissionCollection ();
private:
  void parseActions (::java::lang::String *);
  static const jint INITIATE = 1L;
  static const jint ACCEPT = 2L;
  jint __attribute__((aligned(__alignof__( ::java::security::Permission ))))  flags;

  friend class javax_security_auth_kerberos_ServicePermission$1;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_security_auth_kerberos_ServicePermission__ */
