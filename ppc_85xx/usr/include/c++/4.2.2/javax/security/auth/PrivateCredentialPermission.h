// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_security_auth_PrivateCredentialPermission__
#define __javax_security_auth_PrivateCredentialPermission__

#pragma interface

#include <java/security/Permission.h>
#include <gcj/array.h>

extern "Java"
{
  namespace javax
  {
    namespace security
    {
      namespace auth
      {
        class PrivateCredentialPermission;
      }
    }
  }
  namespace java
  {
    namespace security
    {
      class PermissionCollection;
      class Permission;
    }
  }
}

class javax::security::auth::PrivateCredentialPermission : public ::java::security::Permission
{
public:
  PrivateCredentialPermission (::java::lang::String *, ::java::lang::String *);
  virtual jboolean equals (::java::lang::Object *);
  virtual ::java::lang::String *getActions ();
  virtual ::java::lang::String *getCredentialClass () { return credentialClass; }
  virtual JArray<JArray< ::java::lang::String *> *> *getPrincipals ();
  virtual jint hashCode ();
  virtual jboolean implies (::java::security::Permission *);
  virtual ::java::security::PermissionCollection *newPermissionCollection () { return 0; }
private:
  static const jlong serialVersionUID = 5284372143517237068LL;
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::security::Permission )))) credentialClass;
  ::java::util::Set *principals;
  jboolean testing;

  friend class javax_security_auth_PrivateCredentialPermission$CredOwner;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_security_auth_PrivateCredentialPermission__ */
