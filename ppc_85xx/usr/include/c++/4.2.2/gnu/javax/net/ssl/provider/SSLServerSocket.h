// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_net_ssl_provider_SSLServerSocket__
#define __gnu_javax_net_ssl_provider_SSLServerSocket__

#pragma interface

#include <javax/net/ssl/SSLServerSocket.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
      class Socket;
      class InetAddress;
    }
    namespace security
    {
      class SecureRandom;
    }
  }
  namespace javax
  {
    namespace net
    {
      namespace ssl
      {
        class X509KeyManager;
        class X509TrustManager;
      }
    }
  }
  namespace gnu
  {
    namespace javax
    {
      namespace net
      {
        namespace ssl
        {
          class SRPTrustManager;
          namespace provider
          {
            class SSLServerSocket;
            class SessionContext;
          }
        }
      }
    }
  }
}

class gnu::javax::net::ssl::provider::SSLServerSocket : public ::javax::net::ssl::SSLServerSocket
{
public: // actually package-private
  SSLServerSocket ();
  SSLServerSocket (jint);
  SSLServerSocket (jint, jint);
  SSLServerSocket (jint, jint, ::java::net::InetAddress *);
public:
  virtual JArray< ::java::lang::String *> *getSupportedCipherSuites ();
  virtual JArray< ::java::lang::String *> *getEnabledCipherSuites ();
  virtual void setEnabledCipherSuites (JArray< ::java::lang::String *> *);
  virtual JArray< ::java::lang::String *> *getSupportedProtocols ();
  virtual JArray< ::java::lang::String *> *getEnabledProtocols ();
  virtual void setEnabledProtocols (JArray< ::java::lang::String *> *);
  virtual void setUseClientMode (jboolean);
  virtual jboolean getUseClientMode () { return clientMode; }
  virtual void setNeedClientAuth (jboolean);
  virtual jboolean getNeedClientAuth () { return needClientAuth; }
  virtual void setWantClientAuth (jboolean);
  virtual jboolean getWantClientAuth () { return wantClientAuth; }
  virtual void setEnabledSessionCreation (jboolean);
  virtual void setEnableSessionCreation (jboolean);
  virtual jboolean getEnableSessionCreation () { return createSessions; }
  virtual ::java::net::Socket *accept ();
public: // actually package-private
  virtual void setSessionContext (::gnu::javax::net::ssl::provider::SessionContext *);
  virtual void setKeyManager (::javax::net::ssl::X509KeyManager *);
  virtual void setTrustManager (::javax::net::ssl::X509TrustManager *);
  virtual void setSRPTrustManager (::gnu::javax::net::ssl::SRPTrustManager *);
  virtual void setRandom (::java::security::SecureRandom *);
private:
  ::gnu::javax::net::ssl::provider::SessionContext * __attribute__((aligned(__alignof__( ::javax::net::ssl::SSLServerSocket )))) sessions;
  ::java::util::SortedSet *enabledProtocols;
  ::java::util::List *enabledSuites;
  jboolean clientMode;
  jboolean needClientAuth;
  jboolean wantClientAuth;
  jboolean createSessions;
  ::gnu::javax::net::ssl::SRPTrustManager *srpTrustManager;
  ::javax::net::ssl::X509TrustManager *trustManager;
  ::javax::net::ssl::X509KeyManager *keyManager;
  ::java::security::SecureRandom *random;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_net_ssl_provider_SSLServerSocket__ */
