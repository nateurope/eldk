// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_net_ssl_provider_Session__
#define __gnu_javax_net_ssl_provider_Session__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace security
    {
      class SecureRandom;
      namespace cert
      {
        class Certificate;
      }
    }
  }
  namespace gnu
  {
    namespace javax
    {
      namespace net
      {
        namespace ssl
        {
          class SRPTrustManager;
          namespace provider
          {
            class Session;
            class Alert;
            class SecurityParameters;
            class ProtocolVersion;
            class CipherSuite;
            class SessionContext;
            class Session$ID;
          }
        }
      }
    }
  }
  namespace javax
  {
    namespace security
    {
      namespace cert
      {
        class X509Certificate;
      }
    }
    namespace net
    {
      namespace ssl
      {
        class SSLSessionContext;
        class X509KeyManager;
        class X509TrustManager;
        class SSLPermission;
      }
    }
  }
}

class gnu::javax::net::ssl::provider::Session : public ::java::lang::Object
{
public: // actually package-private
  Session ();
  Session (jlong);
public:  // actually protected
  virtual ::java::lang::Object *clone ();
public:
  virtual ::java::lang::String *getCipherSuite ();
  virtual jlong getCreationTime () { return creationTime; }
  virtual jbyteArray getId ();
  virtual jlong getLastAccessedTime ();
  virtual JArray< ::java::security::cert::Certificate *> *getLocalCertificates ();
  virtual JArray< ::java::security::cert::Certificate *> *getPeerCertificates ();
  virtual JArray< ::javax::security::cert::X509Certificate *> *getPeerCertificateChain ();
  virtual ::java::lang::String *getPeerHost () { return peerHost; }
  virtual ::java::lang::String *getProtocol ();
  virtual ::javax::net::ssl::SSLSessionContext *getSessionContext ();
  virtual JArray< ::java::lang::String *> *getValueNames ();
  virtual ::java::lang::Object *getValue (::java::lang::String *);
  virtual void putValue (::java::lang::String *, ::java::lang::Object *);
  virtual void removeValue (::java::lang::String *);
  virtual void invalidate ();
public: // actually package-private
  virtual void access ();
  virtual void setLastAccessedTime (jlong);
private:
  static ::javax::net::ssl::SSLPermission *GET_SESSION_CONTEXT_PERMISSION;
  jlong __attribute__((aligned(__alignof__( ::java::lang::Object ))))  creationTime;
  ::java::util::Date *lastAccessedTime;
public: // actually package-private
  ::gnu::javax::net::ssl::provider::Session$ID *sessionId;
  JArray< ::java::security::cert::Certificate *> *localCerts;
  JArray< ::java::security::cert::Certificate *> *peerCerts;
  JArray< ::javax::security::cert::X509Certificate *> *peerCertChain;
  ::java::lang::String *peerHost;
  jboolean peerVerified;
  ::gnu::javax::net::ssl::provider::SessionContext *context;
  ::java::util::HashMap *values;
  jboolean valid;
  ::java::util::List *enabledSuites;
  ::gnu::javax::net::ssl::provider::CipherSuite *cipherSuite;
  ::java::util::SortedSet *enabledProtocols;
  ::gnu::javax::net::ssl::provider::ProtocolVersion *protocol;
  jbyteArray masterSecret;
  ::gnu::javax::net::ssl::SRPTrustManager *srpTrustManager;
  ::javax::net::ssl::X509TrustManager *trustManager;
  ::javax::net::ssl::X509KeyManager *keyManager;
  ::java::security::SecureRandom *random;
  ::gnu::javax::net::ssl::provider::SecurityParameters *params;
  ::gnu::javax::net::ssl::provider::Alert *currentAlert;

  friend class gnu_javax_net_ssl_provider_Session$ID;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_net_ssl_provider_Session__ */
