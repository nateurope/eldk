// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_cipher_BaseCipher__
#define __gnu_javax_crypto_cipher_BaseCipher__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace cipher
        {
          class BaseCipher;
        }
      }
    }
  }
}

class gnu::javax::crypto::cipher::BaseCipher : public ::java::lang::Object
{
public:  // actually protected
  BaseCipher (::java::lang::String *, jint, jint);
public:
  virtual ::java::lang::Object *clone () = 0;
  virtual ::java::lang::String *name ();
  virtual jint defaultBlockSize () { return defaultBlockSize__; }
  virtual jint defaultKeySize () { return defaultKeySize__; }
  virtual void init (::java::util::Map *);
  virtual jint currentBlockSize ();
  virtual void reset ();
  virtual void encryptBlock (jbyteArray, jint, jbyteArray, jint);
  virtual void decryptBlock (jbyteArray, jint, jbyteArray, jint);
  virtual jboolean selfTest ();
private:
  jboolean testSymmetry (jint, jint);
public:  // actually protected
  virtual jboolean testKat (jbyteArray, jbyteArray);
  virtual jboolean testKat (jbyteArray, jbyteArray, jbyteArray);
private:
  static ::java::util::logging::Logger *log;
public:  // actually protected
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object )))) name__;
  jint defaultBlockSize__;
  jint defaultKeySize__;
  jint currentBlockSize__;
  ::java::lang::Object *currentKey;
  ::java::lang::Object *lock;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_crypto_cipher_BaseCipher__ */
