// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_cipher_DES__
#define __gnu_javax_crypto_cipher_DES__

#pragma interface

#include <gnu/javax/crypto/cipher/BaseCipher.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace cipher
        {
          class DES;
        }
      }
    }
  }
}

class gnu::javax::crypto::cipher::DES : public ::gnu::javax::crypto::cipher::BaseCipher
{
public:
  DES ();
  static void adjustParity (jbyteArray, jint);
  static jboolean isParityAdjusted (jbyteArray, jint);
  static jboolean isWeak (jbyteArray);
  static jboolean isSemiWeak (jbyteArray);
  static jboolean isPossibleWeak (jbyteArray);
private:
  static void desFunc (jbyteArray, jint, jbyteArray, jint, jintArray);
public:
  virtual ::java::lang::Object *clone ();
  virtual ::java::util::Iterator *blockSizes ();
  virtual ::java::util::Iterator *keySizes ();
  virtual ::java::lang::Object *makeKey (jbyteArray, jint);
  virtual void encrypt (jbyteArray, jint, jbyteArray, jint, ::java::lang::Object *, jint);
  virtual void decrypt (jbyteArray, jint, jbyteArray, jint, ::java::lang::Object *, jint);
  static const jint BLOCK_SIZE = 8L;
  static const jint KEY_SIZE = 8L;
private:
  static jintArray SP1;
  static jintArray SP2;
  static jintArray SP3;
  static jintArray SP4;
  static jintArray SP5;
  static jintArray SP6;
  static jintArray SP7;
  static jintArray SP8;
  static jbyteArray PARITY;
  static jbyteArray ROTARS;
  static jbyteArray PC1;
  static jbyteArray PC2;
public:
  static JArray<jbyteArray> * WEAK_KEYS;
  static JArray<jbyteArray> * SEMIWEAK_KEYS;
  static JArray<jbyteArray> * POSSIBLE_WEAK_KEYS;

  friend class gnu_javax_crypto_cipher_DES$Context;

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_crypto_cipher_DES__ */
