// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_cipher_Cast5__
#define __gnu_javax_crypto_cipher_Cast5__

#pragma interface

#include <gnu/javax/crypto/cipher/BaseCipher.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace cipher
        {
          class Cast5;
        }
      }
    }
  }
}

class gnu::javax::crypto::cipher::Cast5 : public ::gnu::javax::crypto::cipher::BaseCipher
{
public:
  Cast5 ();
private:
  static jintArray unscramble (jint);
public:
  virtual ::java::lang::Object *clone ();
  virtual ::java::util::Iterator *blockSizes ();
  virtual ::java::util::Iterator *keySizes ();
  virtual ::java::lang::Object *makeKey (jbyteArray, jint);
  virtual void encrypt (jbyteArray, jint, jbyteArray, jint, ::java::lang::Object *, jint);
  virtual void decrypt (jbyteArray, jint, jbyteArray, jint, ::java::lang::Object *, jint);
  virtual jboolean selfTest ();
private:
  jint f1 (jint, jint, jint);
  jint f2 (jint, jint, jint);
  jint f3 (jint, jint, jint);
  static const jint DEFAULT_BLOCK_SIZE = 8L;
  static const jint DEFAULT_KEY_SIZE = 5L;
  static jbyteArray KAT_KEY;
  static jbyteArray KAT_PT;
  static jbyteArray KAT_CT;
  static ::java::lang::Boolean *valid;
  static jintArray S1;
  static jintArray S2;
  static jintArray S3;
  static jintArray S4;
  static jintArray S5;
  static jintArray S6;
  static jintArray S7;
  static jintArray S8;
  static const jint _12_ROUNDS = 12L;
  static const jint _16_ROUNDS = 16L;

  friend class gnu_javax_crypto_cipher_Cast5$Cast5Key;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_crypto_cipher_Cast5__ */
