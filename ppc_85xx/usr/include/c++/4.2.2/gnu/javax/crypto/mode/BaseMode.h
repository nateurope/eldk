// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_mode_BaseMode__
#define __gnu_javax_crypto_mode_BaseMode__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace mode
        {
          class BaseMode;
        }
        namespace cipher
        {
          class IBlockCipher;
        }
      }
    }
  }
}

class gnu::javax::crypto::mode::BaseMode : public ::java::lang::Object
{
public:  // actually protected
  BaseMode (::java::lang::String *, ::gnu::javax::crypto::cipher::IBlockCipher *, jint);
public:
  virtual void update (jbyteArray, jint, jbyteArray, jint);
  virtual ::java::lang::String *name ();
  virtual jint defaultBlockSize () { return cipherBlockSize; }
  virtual jint defaultKeySize ();
  virtual ::java::util::Iterator *blockSizes ();
  virtual ::java::util::Iterator *keySizes ();
  virtual void init (::java::util::Map *);
  virtual jint currentBlockSize ();
  virtual void reset ();
  virtual jboolean selfTest ();
  virtual ::java::lang::Object *clone () = 0;
  virtual void setup () = 0;
  virtual void teardown () = 0;
  virtual void encryptBlock (jbyteArray, jint, jbyteArray, jint) = 0;
  virtual void decryptBlock (jbyteArray, jint, jbyteArray, jint) = 0;
private:
  jboolean testSymmetry (jint, jint);
public:  // actually protected
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object )))) name__;
  jint state;
  ::gnu::javax::crypto::cipher::IBlockCipher *cipher;
  jint cipherBlockSize;
  jint modeBlockSize;
  jbyteArray iv;
  ::java::lang::Object *lock;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_crypto_mode_BaseMode__ */
