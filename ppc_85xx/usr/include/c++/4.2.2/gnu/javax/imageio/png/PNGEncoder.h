// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_imageio_png_PNGEncoder__
#define __gnu_javax_imageio_png_PNGEncoder__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      namespace image
      {
        class BufferedImage;
      }
    }
  }
  namespace gnu
  {
    namespace javax
    {
      namespace imageio
      {
        namespace png
        {
          class PNGEncoder;
          class PNGICCProfile;
          class PNGPalette;
          class PNGHeader;
        }
      }
    }
  }
}

class gnu::javax::imageio::png::PNGEncoder : public ::java::lang::Object
{
public:
  PNGEncoder (::java::awt::image::BufferedImage *);
  virtual ::gnu::javax::imageio::png::PNGHeader *getHeader () { return header; }
  virtual ::gnu::javax::imageio::png::PNGPalette *getPalette () { return palette; }
  virtual ::gnu::javax::imageio::png::PNGICCProfile *getProfile () { return profile; }
  virtual ::java::util::Vector *encodeImage ();
private:
  void getRawData (::java::awt::image::BufferedImage *);
  static const jint defaultChunkSize = 8192L;
  ::gnu::javax::imageio::png::PNGHeader * __attribute__((aligned(__alignof__( ::java::lang::Object )))) header;
  ::gnu::javax::imageio::png::PNGPalette *palette;
  jint stride;
  jint bpp;
  jbyteArray rawData;
  ::gnu::javax::imageio::png::PNGICCProfile *profile;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_imageio_png_PNGEncoder__ */
