// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_imageio_bmp_BMPInfoHeader__
#define __gnu_javax_imageio_bmp_BMPInfoHeader__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace imageio
      {
        namespace bmp
        {
          class BMPInfoHeader;
        }
      }
    }
  }
  namespace java
  {
    namespace awt
    {
      class Dimension;
    }
  }
  namespace javax
  {
    namespace imageio
    {
      class ImageWriteParam;
      class IIOImage;
      namespace stream
      {
        class ImageOutputStream;
        class ImageInputStream;
      }
    }
  }
}

class gnu::javax::imageio::bmp::BMPInfoHeader : public ::java::lang::Object
{
public:
  BMPInfoHeader (::javax::imageio::stream::ImageInputStream *);
  BMPInfoHeader (::javax::imageio::stream::ImageOutputStream *, ::javax::imageio::IIOImage *, ::javax::imageio::ImageWriteParam *);
private:
  jbyteArray intToWord (jint);
  jbyteArray intToDWord (jint);
public:
  virtual void setBitCount (jshort);
  virtual jshort getBitCount () { return biBitCount; }
  virtual void setCompression (jint);
  virtual jint getNumberOfPaletteEntries ();
  virtual jint getCompression () { return biCompression; }
  virtual ::java::awt::Dimension *getSize ();
  virtual jint getWidth () { return biWidth; }
  virtual jint getHeight () { return biHeight; }
  virtual void setSize (::java::awt::Dimension *);
public:  // actually protected
  jint __attribute__((aligned(__alignof__( ::java::lang::Object ))))  biSize;
  jint biWidth;
  jint biHeight;
  jshort biPlanes;
  jshort biBitCount;
  jint biCompression;
  jint biSizeImage;
  jint biXPelsPerMeter;
  jint biYPelsPerMeter;
  jint biClrUsed;
  jint biClrImportant;
public:
  static const jint SIZE = 40L;
  static const jint BI_RGB = 0L;
  static const jint BI_RLE8 = 1L;
  static const jint BI_RLE4 = 2L;
  static const jint BI_BITFIELDS = 3L;

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_imageio_bmp_BMPInfoHeader__ */
