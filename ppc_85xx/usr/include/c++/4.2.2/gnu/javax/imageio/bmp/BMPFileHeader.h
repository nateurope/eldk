// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_imageio_bmp_BMPFileHeader__
#define __gnu_javax_imageio_bmp_BMPFileHeader__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace imageio
      {
        namespace bmp
        {
          class BMPFileHeader;
        }
      }
    }
  }
  namespace javax
  {
    namespace imageio
    {
      class IIOImage;
      namespace stream
      {
        class ImageOutputStream;
        class ImageInputStream;
      }
    }
  }
}

class gnu::javax::imageio::bmp::BMPFileHeader : public ::java::lang::Object
{
public:
  BMPFileHeader (::javax::imageio::stream::ImageInputStream *);
  BMPFileHeader (::javax::imageio::stream::ImageOutputStream *, ::javax::imageio::IIOImage *);
  virtual void write (::javax::imageio::stream::ImageOutputStream *);
  virtual void setSize (jlong);
  virtual void setOffset (jlong);
  virtual jlong getSize () { return bfSize; }
  virtual jlong getOffset () { return bfOffBits; }
private:
  static const jint bfType = 16973L;
public:  // actually protected
  jlong __attribute__((aligned(__alignof__( ::java::lang::Object ))))  bfSize;
  jlong bfOffBits;
public:
  static const jint SIZE = 14L;
private:
  static const jint BITMAPINFOHEADER_SIZE = 40L;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_javax_imageio_bmp_BMPFileHeader__ */
