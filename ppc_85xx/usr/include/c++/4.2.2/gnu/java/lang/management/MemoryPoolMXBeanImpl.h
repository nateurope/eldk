// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_lang_management_MemoryPoolMXBeanImpl__
#define __gnu_java_lang_management_MemoryPoolMXBeanImpl__

#pragma interface

#include <gnu/java/lang/management/BeanImpl.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace lang
      {
        namespace management
        {
          class MemoryPoolMXBeanImpl;
        }
      }
    }
  }
}

class gnu::java::lang::management::MemoryPoolMXBeanImpl : public ::gnu::java::lang::management::BeanImpl
{
public:
  MemoryPoolMXBeanImpl (::java::lang::String *);
  virtual ::java::lang::management::MemoryUsage *getCollectionUsage ();
  virtual jlong getCollectionUsageThreshold ();
  virtual jlong getCollectionUsageThresholdCount ();
  virtual JArray< ::java::lang::String *> *getMemoryManagerNames ();
  virtual ::java::lang::String *getName () { return name; }
  virtual ::java::lang::management::MemoryUsage *getPeakUsage ();
  virtual ::java::lang::String *getType ();
  virtual ::java::lang::management::MemoryUsage *getUsage ();
  virtual jlong getUsageThreshold ();
  virtual jlong getUsageThresholdCount ();
  virtual jboolean isCollectionUsageThresholdExceeded ();
  virtual jboolean isCollectionUsageThresholdSupported ();
  virtual jboolean isUsageThresholdExceeded ();
  virtual jboolean isUsageThresholdSupported ();
  virtual jboolean isValid ();
  virtual void resetPeakUsage ();
  virtual void setCollectionUsageThreshold (jlong);
  virtual void setUsageThreshold (jlong);
private:
  ::java::lang::String * __attribute__((aligned(__alignof__( ::gnu::java::lang::management::BeanImpl )))) name;
  static ::java::lang::String *COLLECTION_USAGE_THRESHOLD;
  static ::java::lang::String *USAGE_THRESHOLD;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_java_lang_management_MemoryPoolMXBeanImpl__ */
