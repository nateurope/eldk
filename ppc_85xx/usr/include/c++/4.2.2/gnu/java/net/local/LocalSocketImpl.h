// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_net_local_LocalSocketImpl__
#define __gnu_java_net_local_LocalSocketImpl__

#pragma interface

#include <java/net/SocketImpl.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
      class SocketAddress;
      class InetAddress;
      class SocketImpl;
    }
  }
  namespace gnu
  {
    namespace java
    {
      namespace net
      {
        namespace local
        {
          class LocalSocketImpl;
          class LocalSocketAddress;
        }
      }
    }
  }
}

class gnu::java::net::local::LocalSocketImpl : public ::java::net::SocketImpl
{
public: // actually package-private
  LocalSocketImpl ();
  LocalSocketImpl (jboolean);
public:
  virtual void setOption (jint, ::java::lang::Object *);
  virtual ::java::lang::Object *getOption (jint);
public:  // actually protected
  virtual void create (jboolean) { }
  virtual void listen (jint) { }
  virtual void accept (::gnu::java::net::local::LocalSocketImpl *) { }
  virtual jint available ();
  virtual void close () { }
  virtual void sendUrgentData (jint) { }
  virtual void shutdownInput () { }
  virtual void shutdownOutput () { }
public: // actually package-private
  virtual void unlink () { }
  virtual void localBind (::gnu::java::net::local::LocalSocketAddress *) { }
  virtual void localConnect (::gnu::java::net::local::LocalSocketAddress *) { }
  virtual jint read (jbyteArray, jint, jint);
  virtual void write (jbyteArray, jint, jint) { }
  virtual void doCreate ();
  virtual ::gnu::java::net::local::LocalSocketAddress *getLocalAddress () { return local; }
  virtual ::gnu::java::net::local::LocalSocketAddress *getRemoteAddress () { return remote; }
public:  // actually protected
  virtual ::java::io::InputStream *getInputStream ();
  virtual ::java::io::OutputStream *getOutputStream ();
  virtual void accept (::java::net::SocketImpl *);
  virtual void connect (::java::lang::String *, jint);
  virtual void connect (::java::net::InetAddress *, jint);
  virtual void connect (::java::net::SocketAddress *, jint);
  virtual void bind (::java::net::InetAddress *, jint);
  virtual void bind (::java::net::SocketAddress *);
private:
  jboolean __attribute__((aligned(__alignof__( ::java::net::SocketImpl ))))  created;
  ::java::io::InputStream *in;
  ::java::io::OutputStream *out;
  jint socket_fd;
  ::gnu::java::net::local::LocalSocketAddress *local;
  ::gnu::java::net::local::LocalSocketAddress *remote;

  friend class gnu_java_net_local_LocalSocketImpl$LocalOutputStream;
  friend class gnu_java_net_local_LocalSocketImpl$LocalInputStream;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_java_net_local_LocalSocketImpl__ */
