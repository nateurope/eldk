// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_net_local_LocalServerSocket__
#define __gnu_java_net_local_LocalServerSocket__

#pragma interface

#include <java/net/ServerSocket.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
      class Socket;
      class InetAddress;
      class SocketAddress;
    }
  }
  namespace gnu
  {
    namespace java
    {
      namespace net
      {
        namespace local
        {
          class LocalServerSocket;
          class LocalSocketImpl;
        }
      }
    }
  }
}

class gnu::java::net::local::LocalServerSocket : public ::java::net::ServerSocket
{
public:
  LocalServerSocket ();
  LocalServerSocket (::java::net::SocketAddress *);
  virtual void bind (::java::net::SocketAddress *);
  virtual void bind (::java::net::SocketAddress *, jint);
  virtual ::java::net::InetAddress *getInetAddress () { return 0; }
  virtual jint getLocalPort ();
  virtual ::java::net::SocketAddress *getLocalSocketAddress ();
  virtual ::java::net::Socket *accept ();
  virtual void close ();
  virtual jboolean isBound ();
  virtual jboolean isClosed () { return closed; }
  virtual void setSoTimeout (jint);
  virtual jint getSoTimeout ();
  virtual void setReuseAddress (jboolean);
  virtual jboolean getReuseAddress ();
  virtual ::java::lang::String *toString ();
  virtual void setReceiveBufferSize (jint);
  virtual jint getReceiveBufferSize ();
  virtual void setSendBufferSize (jint);
  virtual jint getSendBufferSize ();
private:
  ::gnu::java::net::local::LocalSocketImpl * __attribute__((aligned(__alignof__( ::java::net::ServerSocket )))) myImpl;
  jboolean closed;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_java_net_local_LocalServerSocket__ */
