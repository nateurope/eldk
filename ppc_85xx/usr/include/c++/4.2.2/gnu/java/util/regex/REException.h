// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_util_regex_REException__
#define __gnu_java_util_regex_REException__

#pragma interface

#include <java/lang/Exception.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace util
      {
        namespace regex
        {
          class REException;
        }
      }
    }
  }
}

class gnu::java::util::regex::REException : public ::java::lang::Exception
{
public: // actually package-private
  REException (::java::lang::String *, jint, jint);
public:
  virtual jint getType () { return type; }
  virtual jint getPosition () { return pos; }
  virtual ::java::lang::String *getMessage ();
private:
  jint __attribute__((aligned(__alignof__( ::java::lang::Exception ))))  type;
  jint pos;
public:
  static const jint REG_BADRPT = 1L;
  static const jint REG_BADBR = 2L;
  static const jint REG_EBRACE = 3L;
  static const jint REG_EBRACK = 4L;
  static const jint REG_ERANGE = 5L;
  static const jint REG_ECTYPE = 6L;
  static const jint REG_EPAREN = 7L;
  static const jint REG_ESUBREG = 8L;
  static const jint REG_EEND = 9L;
  static const jint REG_ESCAPE = 10L;
  static const jint REG_BADPAT = 11L;
  static const jint REG_ESIZE = 12L;
  static const jint REG_ESPACE = 13L;

  static ::java::lang::Class class$;
};

#endif /* __gnu_java_util_regex_REException__ */
