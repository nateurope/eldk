// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_util_regex_BacktrackStack__
#define __gnu_java_util_regex_BacktrackStack__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace util
      {
        namespace regex
        {
          class BacktrackStack;
          class BacktrackStack$Backtrack;
        }
      }
    }
  }
}

class gnu::java::util::regex::BacktrackStack : public ::java::lang::Object
{
public: // actually package-private
  BacktrackStack ();
  virtual jboolean empty ();
  virtual ::gnu::java::util::regex::BacktrackStack$Backtrack *peek ();
  virtual ::gnu::java::util::regex::BacktrackStack$Backtrack *pop ();
  virtual void clear ();
  virtual void push (::gnu::java::util::regex::BacktrackStack$Backtrack *);
  JArray< ::gnu::java::util::regex::BacktrackStack$Backtrack *> * __attribute__((aligned(__alignof__( ::java::lang::Object )))) stack;
private:
  jint size;
  jint capacity;
  static const jint INITIAL_CAPACITY = 32L;
  static const jint CAPACITY_INCREMENT = 16L;

  friend class gnu_java_util_regex_BacktrackStack$Backtrack;
public:

  static ::java::lang::Class class$;
};

#endif /* __gnu_java_util_regex_BacktrackStack__ */
