#!/bin/sh
#
#   Copyright (c) International Business Machines  Corp., 2003, 2005
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#   the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this pronram;  if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#
#
#  FILE   : ftp
#
#  PURPOSE: Ftp into a remote hosts successfully as a vaild user (other than root) 
#
#  HISTORY:
#     03/03  Jerone Young (jeroney@us.ibm.com) 
#     04/03  Dustin Kirkland (k1rkland@us.ibm.com)
#     09/05  Kris Wilson (krisw@us.ibm.com) Check if vsftpd is on system.
#
#  NOTE:
#	This version is intended for EAL certification, it will need modification 
#	to conform with LTP standards in the offical LTP tree.

RHOST="localhost"
TEST_USER="anonymous"
TEST_USER_PASSWD="noone@nowhere.com"

tvar=${MACHTYPE%-*}
tvar=${tvar#*-}

if [ $tvar = "redhat" -o $tvar = "redhat-linux" ] 
then

   # Check if vsftpd is on system.
   which vsftpd
   if [ $? != 0 ]
   then {
      echo "vsftpd not found.  Possible cause: does not exist on WS."
      echo "Test ftp05 FAIL."
      EXIT_CODE=1
      exit 1
   }
   fi

ANONYMOUS_ENABLE=`cat /etc/vsftpd/vsftpd.conf | grep "^anonymous_enable=" | awk -F= '{print $2}'`
else
ANONYMOUS_ENABLE=`cat /etc/vsftpd.conf | grep "^anonymous_enable=" | awk -F= '{print $2}'`
fi
if [ "$ANONYMOUS_ENABLE" != "NO" ]; then
  ANONYMOUS_ENABLE="YES"
fi 

EXIT_CODE=0

#-----------------------------------------------------------------------
# FUNCTION:  do_test
#
# DESCRIPTION: The anonymous user will ftp in and create a directory in his home directory on the remote host.
#-----------------------------------------------------------------------

do_test(){
	echo "TEST: Ftp into a remote host as anonymous user, ANONYMOUS_ENABLE=$ANONYMOUS_ENABLE"

if [ "$ANONYMOUS_ENABLE" = "YES" ]; then {
	expect -c "
                   spawn ftp $RHOST
                   sleep 1
                   expect -re \": \"
                   send \"$TEST_USER\r\"
                   expect -re \"Password:\"
                   send \"$TEST_USER_PASSWD\r\"
                   expect {
                     # 530 - Login failed
                           \"530\" {send_user \"==> TEST \#$TEST : FAIL (ftp rejected login attempt)\n\";exit 1}
                     # 230 - Login successful
                           \"230\" {send_user \"==> TEST \#$TEST : PASS (ftp allowed login attempt)\n\";exit 0}
                   }
                   expect \"ftp> \"
                   send \"quit\r\"
	"
} else {
        expect -c "
                   spawn ftp $RHOST
                   sleep 1
                   expect -re \": \"
                   send \"$TEST_USER\r\"
                   expect -re \"Password:\"
                   send \"$TEST_USER_PASSWD\r\"
                   expect {
                     # 230 - Login successful
                           \"230\" {send_user \"==> TEST \#$TEST : FAIL (ftp allowed login attempt)\n\";exit 1} 
                     # 500 - Login failed
                           \"500\" {send_user \"==> TEST \#$TEST : PASS (ftp rejected login attempt)\n\";exit 0}
                     # 530 - Login failed
                           \"530\" {send_user \"==> TEST \#$TEST : PASS (ftp rejected login attempt)\n\";exit 0}
                   }
                   expect \"ftp> \"
                   send \"quit\r\"
        "
} fi


    if [ $? != 0 ]
        then {
        EXIT_CODE=1 
        }
    fi
}	

#----------------------------------------------------------------------
# FUNCTION: MAIN
# PURPOSE:  To invoke the functions to perform the tasks described in
#           the prologue.
#----------------------------------------------------------------------
do_test
exit $EXIT_CODE
